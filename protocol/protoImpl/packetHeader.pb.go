// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: proto/packetHeader.proto

package protoImpl

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 定义枚举类型（对应 Flag 和 Status）
type Flag int32

const (
	Flag_Request  Flag = 0 // 默认值必须为 0
	Flag_Response Flag = 1
	Flag_Push     Flag = 2
)

// Enum value maps for Flag.
var (
	Flag_name = map[int32]string{
		0: "Request",
		1: "Response",
		2: "Push",
	}
	Flag_value = map[string]int32{
		"Request":  0,
		"Response": 1,
		"Push":     2,
	}
)

func (x Flag) Enum() *Flag {
	p := new(Flag)
	*p = x
	return p
}

func (x Flag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Flag) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_packetHeader_proto_enumTypes[0].Descriptor()
}

func (Flag) Type() protoreflect.EnumType {
	return &file_proto_packetHeader_proto_enumTypes[0]
}

func (x Flag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Flag.Descriptor instead.
func (Flag) EnumDescriptor() ([]byte, []int) {
	return file_proto_packetHeader_proto_rawDescGZIP(), []int{0}
}

// status is a uint16 value
type Status int32

const (
	Status_Success Status = 0 // client defined
	// client error 100-200
	Status_NoDestination     Status = 100
	Status_InvalidPacketBody Status = 101
	Status_InvalidCommand    Status = 103
	Status_Unauthorized      Status = 105
	// server error 300-400
	Status_SystemException Status = 300
	Status_NotImplemented  Status = 301
	// specific error
	Status_SessionNotFound Status = 404 // session lost
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0:   "Success",
		100: "NoDestination",
		101: "InvalidPacketBody",
		103: "InvalidCommand",
		105: "Unauthorized",
		300: "SystemException",
		301: "NotImplemented",
		404: "SessionNotFound",
	}
	Status_value = map[string]int32{
		"Success":           0,
		"NoDestination":     100,
		"InvalidPacketBody": 101,
		"InvalidCommand":    103,
		"Unauthorized":      105,
		"SystemException":   300,
		"NotImplemented":    301,
		"SessionNotFound":   404,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_packetHeader_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_proto_packetHeader_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_packetHeader_proto_rawDescGZIP(), []int{1}
}

// 定义枚举类型（对应 Flag 和 Status）
type MetaType int32

const (
	MetaType_int    MetaType = 0 // 默认值必须为 0
	MetaType_string MetaType = 1
	MetaType_float  MetaType = 2
)

// Enum value maps for MetaType.
var (
	MetaType_name = map[int32]string{
		0: "int",
		1: "string",
		2: "float",
	}
	MetaType_value = map[string]int32{
		"int":    0,
		"string": 1,
		"float":  2,
	}
)

func (x MetaType) Enum() *MetaType {
	p := new(MetaType)
	*p = x
	return p
}

func (x MetaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetaType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_packetHeader_proto_enumTypes[2].Descriptor()
}

func (MetaType) Type() protoreflect.EnumType {
	return &file_proto_packetHeader_proto_enumTypes[2]
}

func (x MetaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetaType.Descriptor instead.
func (MetaType) EnumDescriptor() ([]byte, []int) {
	return file_proto_packetHeader_proto_rawDescGZIP(), []int{2}
}

// Meta 消息定义
type Meta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Type          MetaType               `protobuf:"varint,3,opt,name=type,proto3,enum=protocol.MetaType" json:"type,omitempty"` // 占位符字段
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Meta) Reset() {
	*x = Meta{}
	mi := &file_proto_packetHeader_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_packetHeader_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_proto_packetHeader_proto_rawDescGZIP(), []int{0}
}

func (x *Meta) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Meta) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Meta) GetType() MetaType {
	if x != nil {
		return x.Type
	}
	return MetaType_int
}

// Header 消息定义
type Header struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"` // 字段编号从 1 开始递增
	ChannelId     string                 `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Sequence      uint32                 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Flag          Flag                   `protobuf:"varint,4,opt,name=flag,proto3,enum=protocol.Flag" json:"flag,omitempty"`
	Status        Status                 `protobuf:"varint,5,opt,name=status,proto3,enum=protocol.Status" json:"status,omitempty"`
	Dest          string                 `protobuf:"bytes,6,opt,name=dest,proto3" json:"dest,omitempty"`
	Meta          []*Meta                `protobuf:"bytes,7,rep,name=meta,proto3" json:"meta,omitempty"` // 对应 []*Meta
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_proto_packetHeader_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_proto_packetHeader_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_proto_packetHeader_proto_rawDescGZIP(), []int{1}
}

func (x *Header) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Header) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *Header) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Header) GetFlag() Flag {
	if x != nil {
		return x.Flag
	}
	return Flag_Request
}

func (x *Header) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

func (x *Header) GetDest() string {
	if x != nil {
		return x.Dest
	}
	return ""
}

func (x *Header) GetMeta() []*Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

var File_proto_packetHeader_proto protoreflect.FileDescriptor

const file_proto_packetHeader_proto_rawDesc = "" +
	"\n" +
	"\x18proto/packetHeader.proto\x12\bprotocol\"V\n" +
	"\x04Meta\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12&\n" +
	"\x04type\x18\x03 \x01(\x0e2\x12.protocol.MetaTypeR\x04type\"\xe3\x01\n" +
	"\x06Header\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\tR\tchannelId\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\rR\bsequence\x12\"\n" +
	"\x04flag\x18\x04 \x01(\x0e2\x0e.protocol.FlagR\x04flag\x12(\n" +
	"\x06status\x18\x05 \x01(\x0e2\x10.protocol.StatusR\x06status\x12\x12\n" +
	"\x04dest\x18\x06 \x01(\tR\x04dest\x12\"\n" +
	"\x04meta\x18\a \x03(\v2\x0e.protocol.MetaR\x04meta*+\n" +
	"\x04Flag\x12\v\n" +
	"\aRequest\x10\x00\x12\f\n" +
	"\bResponse\x10\x01\x12\b\n" +
	"\x04Push\x10\x02*\xa6\x01\n" +
	"\x06Status\x12\v\n" +
	"\aSuccess\x10\x00\x12\x11\n" +
	"\rNoDestination\x10d\x12\x15\n" +
	"\x11InvalidPacketBody\x10e\x12\x12\n" +
	"\x0eInvalidCommand\x10g\x12\x10\n" +
	"\fUnauthorized\x10i\x12\x14\n" +
	"\x0fSystemException\x10\xac\x02\x12\x13\n" +
	"\x0eNotImplemented\x10\xad\x02\x12\x14\n" +
	"\x0fSessionNotFound\x10\x94\x03**\n" +
	"\bMetaType\x12\a\n" +
	"\x03int\x10\x00\x12\n" +
	"\n" +
	"\x06string\x10\x01\x12\t\n" +
	"\x05float\x10\x02B\rZ\v./protoImplb\x06proto3"

var (
	file_proto_packetHeader_proto_rawDescOnce sync.Once
	file_proto_packetHeader_proto_rawDescData []byte
)

func file_proto_packetHeader_proto_rawDescGZIP() []byte {
	file_proto_packetHeader_proto_rawDescOnce.Do(func() {
		file_proto_packetHeader_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_packetHeader_proto_rawDesc), len(file_proto_packetHeader_proto_rawDesc)))
	})
	return file_proto_packetHeader_proto_rawDescData
}

var file_proto_packetHeader_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_packetHeader_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_packetHeader_proto_goTypes = []any{
	(Flag)(0),      // 0: protocol.Flag
	(Status)(0),    // 1: protocol.Status
	(MetaType)(0),  // 2: protocol.MetaType
	(*Meta)(nil),   // 3: protocol.Meta
	(*Header)(nil), // 4: protocol.Header
}
var file_proto_packetHeader_proto_depIdxs = []int32{
	2, // 0: protocol.Meta.type:type_name -> protocol.MetaType
	0, // 1: protocol.Header.flag:type_name -> protocol.Flag
	1, // 2: protocol.Header.status:type_name -> protocol.Status
	3, // 3: protocol.Header.meta:type_name -> protocol.Meta
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_packetHeader_proto_init() }
func file_proto_packetHeader_proto_init() {
	if File_proto_packetHeader_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_packetHeader_proto_rawDesc), len(file_proto_packetHeader_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_packetHeader_proto_goTypes,
		DependencyIndexes: file_proto_packetHeader_proto_depIdxs,
		EnumInfos:         file_proto_packetHeader_proto_enumTypes,
		MessageInfos:      file_proto_packetHeader_proto_msgTypes,
	}.Build()
	File_proto_packetHeader_proto = out.File
	file_proto_packetHeader_proto_goTypes = nil
	file_proto_packetHeader_proto_depIdxs = nil
}
